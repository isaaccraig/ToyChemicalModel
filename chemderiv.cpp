
// AUTOMATICALLY GENERATED BY PECANS //

#include <iostream>
#include "chemderiv.h"

CHEMMAP* chem_solver(double dt, double HOUR, double TEMP, double C_M, double HEIGHT, double conc_O3, double conc_NO2, double conc_NO, double conc_AP, double conc_APN, double conc_HNO3, double conc_HO, double conc_HO2, double conc_PROD) {
    CHEMMAP cmap;
    cmap["O3"] = dO3_dt( HOUR,  TEMP,  C_M,  HEIGHT,  conc_O3,  conc_NO2,  conc_NO);
    cmap["NO2"] = dNO2_dt( HOUR,  TEMP,  C_M,  HEIGHT,  conc_AP,  conc_APN,  conc_O3,  conc_HO,  conc_NO2,  conc_NO);
    cmap["NO"] = dNO_dt( HOUR,  TEMP,  C_M,  HEIGHT,  conc_O3,  conc_NO2,  conc_NO);
    cmap["AP"] = dAP_dt( HOUR,  TEMP,  C_M,  HEIGHT,  conc_NO2,  conc_HO2,  conc_APN,  conc_AP);
    cmap["APN"] = dAPN_dt( HOUR,  TEMP,  C_M,  HEIGHT,  conc_NO2,  conc_APN,  conc_AP);
    cmap["HNO3"] = dHNO3_dt( HOUR,  TEMP,  C_M,  HEIGHT,  conc_HO,  conc_NO2);
    cmap["HO"] = dHO_dt( TEMP,  C_M);
    cmap["HO2"] = dHO2_dt( TEMP,  C_M);
    cmap["PROD"] = dPROD_dt( TEMP,  C_M);
    return &cmap;
}

 double dO3_dt(double HOUR, double TEMP, double C_M, double HEIGHT, double conc_O3, double conc_NO2, double conc_NO){
     double dO3 = -1.0*ARR2( 1.40e-12 , 1310, TEMP )*conc_O3*conc_NO + 1.0*0.01 *conc_NO2;
    return dO3;
}

 double dNO2_dt(double HOUR, double TEMP, double C_M, double HEIGHT, double conc_AP, double conc_APN, double conc_O3, double conc_HO, double conc_NO2, double conc_NO){
     double dNO2 = 1.0*ARR2( 1.40e-12 , 1310, TEMP )*conc_O3*conc_NO + -1.0*0.01 *conc_NO2 + -1.0*TROE( 1.49e-30 , 1.8 , 2.58e-11 , 0 , TEMP, C_M)*conc_NO2*conc_HO + -1.0*(8.1e-12 * exp(270/TEMP))*conc_AP*conc_NO2 + 1.0*TROEE(1.11e28,14000, 9.70e-29 , 5.6 , 9.30e-12 , 1.5, TEMP, C_M) *conc_APN;
    return dNO2;
}

 double dNO_dt(double HOUR, double TEMP, double C_M, double HEIGHT, double conc_O3, double conc_NO2, double conc_NO){
     double dNO = -1.0*ARR2( 1.40e-12 , 1310, TEMP )*conc_O3*conc_NO + 1.0*0.01 *conc_NO2;
    return dNO;
}

 double dAP_dt(double HOUR, double TEMP, double C_M, double HEIGHT, double conc_NO2, double conc_HO2, double conc_APN, double conc_AP){
     double dAP = -1.0*(8.1e-12 * exp(270/TEMP))*conc_AP*conc_NO2 + 1.0*TROEE(1.11e28,14000, 9.70e-29 , 5.6 , 9.30e-12 , 1.5, TEMP, C_M) *conc_APN + -1.0*(4.3e-13 * exp(1040/TEMP))*conc_HO2*conc_AP + -2.0*(2.0e-12 * exp(500/TEMP))* pow(conc_AP,2);
    return dAP;
}

 double dAPN_dt(double HOUR, double TEMP, double C_M, double HEIGHT, double conc_NO2, double conc_APN, double conc_AP){
     double dAPN = 1.0*(8.1e-12 * exp(270/TEMP))*conc_AP*conc_NO2 + -1.0*TROEE(1.11e28,14000, 9.70e-29 , 5.6 , 9.30e-12 , 1.5, TEMP, C_M) *conc_APN;
    return dAPN;
}

 double dHNO3_dt(double HOUR, double TEMP, double C_M, double HEIGHT, double conc_HO, double conc_NO2){
     double dHNO3 = 1.0*TROE( 1.49e-30 , 1.8 , 2.58e-11 , 0 , TEMP, C_M)*conc_NO2*conc_HO;
    return dHNO3;
}

 double dHO_dt(double TEMP, double C_M){
     double dHO = 0;
    return dHO;
}

 double dHO2_dt(double TEMP, double C_M){
     double dHO2 = 0;
    return dHO2;
}

 double dPROD_dt(double TEMP, double C_M){
     double dPROD = 0;
    return dPROD;
}

//////////////////////
// RATE EXPRESSIONS //
//////////////////////

double ARR2(double A0, double B0, double TEMP){
    return A0 * exp(-B0 / TEMP);
}

double TROE(double k0_300K, double n, double kinf_300K, double m, double TEMP, double C_M){
     double zt_help;
     double k0_T;
     double kinf_T;
     double k_ratio;
    zt_help = 300.0 / TEMP;
    k0_T    = k0_300K   * pow(zt_help, n) * C_M;
    kinf_T  = kinf_300K * pow(zt_help, m);
    k_ratio = k0_T/kinf_T;
     return k0_T/(1.0 + k_ratio)* pow(0.6,(1.0 / (1.0+pow(log10(k_ratio),2))));
}

double TROEE(double A, double B, double k0_300K, double n, double kinf_300K, double m, double TEMP, double C_M){
   double zt_help;
   double k0_T;
   double kinf_T;
   double k_ratio;
   double troe;
  zt_help = 300 / TEMP;
  k0_T    = k0_300K   * pow(zt_help, n) * C_M;
  kinf_T  = kinf_300K * pow(zt_help, m);
  k_ratio = k0_T / kinf_T;
  troe   = k0_T / (1+k_ratio)* pow(0.6,(1 / (1+pow(log10(k_ratio),2))));
   return A * exp( - B/TEMP) * troe;
}
